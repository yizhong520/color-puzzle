{"ast":null,"code":"var _jsxFileName = \"/Users/yizhong/Desktop/info340_code/project-2-shaoy23-1765451/src/artworkList/PaintingSection.js\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$();\n\nimport 'firebase/database';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faHeart } from '@fortawesome/free-solid-svg-icons';\nimport { useEffect, useState } from 'react';\nimport firebase from 'firebase/app';\nimport { Collapse, Button, CardBody, Card } from 'reactstrap';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport function RenderPainting(props) {\n  let paintArray = props.paintArray;\n  let inputtedValue = props.inputtedValue;\n  let paintings = paintArray.map(p => {\n    if (inputtedValue.toLowerCase().replaceAll(/\\s/g, '') === p.author.toLowerCase() || inputtedValue.toLowerCase().replaceAll(/\\s/g, '') === p.name.toLowerCase()) {\n      return /*#__PURE__*/_jsxDEV(RenderPaintInSearch, {\n        painting: p\n      }, p.name, false, {\n        fileName: _jsxFileName,\n        lineNumber: 15,\n        columnNumber: 20\n      }, this);\n    }\n\n    return /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 17\n    }, this);\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"row my-4 painting-section\",\n    children: paintings\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 20,\n    columnNumber: 9\n  }, this);\n}\n_c = RenderPainting;\nexport function RenderPaintingAll(props) {\n  let paintArray = props.paintArray;\n  let paintings = paintArray.map(p => {\n    return /*#__PURE__*/_jsxDEV(RenderPaint, {\n      painting: p\n    }, p.alt + \"_\", false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 16\n    }, this);\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"row my-4 painting-section\",\n    children: paintings\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 9\n  }, this);\n}\n_c2 = RenderPaintingAll;\nexport function RenderPaint(props) {\n  _s();\n\n  const [count_likes, setCountLikes] = useState(0);\n  useEffect(() => {\n    const curr_count = firebase.database().ref(\"painting_\" + props.painting.number);\n    curr_count.on(\"value\", snapshot => {\n      const theValue = snapshot.val();\n      setCountLikes(theValue);\n    });\n  }); //an event handling callback\n\n  const handleClick = event => {\n    const curr_count = firebase.database().ref(\"painting_\" + props.painting.number);\n    console.log(curr_count);\n    curr_count.set(count_likes + 1);\n    setCountLikes(count_likes + 1); //update the state to be a new value\n  };\n\n  let imgUrl = \"./img/\" + props.painting.painting + \".jpg\";\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"col-12 col-xl-6\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"card card-no-shadow\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"card-body\",\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          src: imgUrl,\n          alt: props.painting.alt,\n          className: \"card-img-top\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n          className: \"card-title\",\n          children: /*#__PURE__*/_jsxDEV(\"a\", {\n            href: props.painting.link,\n            children: props.painting.title\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 65,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"card-text\",\n          children: props.painting.text\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"likes\",\n          children: [/*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n            onClick: handleClick,\n            icon: faHeart,\n            className: \"fa-2x\",\n            color: \"tomato\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 69,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"likes-count\",\n            children: [\"Can't believe people liked me \", count_likes, \" times (\\u0E51\\u2022\\u0300\\u3142\\u2022\\u0301)\\u0648\\u2727\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 70,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 60,\n    columnNumber: 9\n  }, this);\n}\n\n_s(RenderPaint, \"XVz6ZidxGjuxVsnSgfrTj4RuVO8=\");\n\n_c3 = RenderPaint;\nexport function RenderPaintInSearch(props) {\n  _s2();\n\n  const [count_likes, setCountLikes] = useState(0);\n  useEffect(() => {\n    const curr_count = firebase.database().ref(\"painting_\" + props.painting.number);\n    curr_count.on(\"value\", snapshot => {\n      const theValue = snapshot.val();\n      console.log(\"valueChange:\" + theValue);\n      setCountLikes(theValue);\n    });\n  }); //an event handling callback\n\n  const handleClick = event => {\n    const curr_count = firebase.database().ref(\"painting_\" + props.painting.number);\n    console.log(curr_count);\n    curr_count.set(count_likes + 1);\n    setCountLikes(count_likes + 1); //update the state to be a new value\n  };\n\n  const [isOpen, setIsOpen] = useState(false);\n\n  const toggle = () => setIsOpen(!isOpen);\n\n  let imgUrl = \"./img/\" + props.painting.painting + \".jpg\";\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"col-12 col-xl-6\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"card card-no-shadow\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"card-body\",\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          src: imgUrl,\n          alt: props.painting.alt,\n          className: \"card-img-top\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 107,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n          className: \"card-title\",\n          children: /*#__PURE__*/_jsxDEV(\"a\", {\n            href: props.painting.link,\n            children: props.painting.title\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 109,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 108,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"detail-button-section\",\n          children: [/*#__PURE__*/_jsxDEV(Button, {\n            className: \"more-detail-button\",\n            color: \"info\",\n            onClick: toggle,\n            children: \"Check for More Detail\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 112,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Collapse, {\n            isOpen: isOpen,\n            children: /*#__PURE__*/_jsxDEV(Card, {\n              children: /*#__PURE__*/_jsxDEV(CardBody, {\n                children: /*#__PURE__*/_jsxDEV(\"p\", {\n                  className: \"card-text\",\n                  children: props.painting.text\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 116,\n                  columnNumber: 33\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 115,\n                columnNumber: 29\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 114,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 113,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 111,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"likes\",\n          children: [/*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n            onClick: handleClick,\n            icon: faHeart,\n            className: \"fa-2x\",\n            color: \"tomato\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 122,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"likes-count\",\n            children: [\"Can't believe people liked me \", count_likes, \" times (\\u0E51\\u2022\\u0300\\u3142\\u2022\\u0301)\\u0648\\u2727\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 123,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 121,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 104,\n    columnNumber: 9\n  }, this);\n}\n\n_s2(RenderPaintInSearch, \"MguiniPQlGyDGFPLTwU86Lp7ekY=\");\n\n_c4 = RenderPaintInSearch;\n\nvar _c, _c2, _c3, _c4;\n\n$RefreshReg$(_c, \"RenderPainting\");\n$RefreshReg$(_c2, \"RenderPaintingAll\");\n$RefreshReg$(_c3, \"RenderPaint\");\n$RefreshReg$(_c4, \"RenderPaintInSearch\");","map":{"version":3,"sources":["/Users/yizhong/Desktop/info340_code/project-2-shaoy23-1765451/src/artworkList/PaintingSection.js"],"names":["FontAwesomeIcon","faHeart","useEffect","useState","firebase","Collapse","Button","CardBody","Card","RenderPainting","props","paintArray","inputtedValue","paintings","map","p","toLowerCase","replaceAll","author","name","RenderPaintingAll","alt","RenderPaint","count_likes","setCountLikes","curr_count","database","ref","painting","number","on","snapshot","theValue","val","handleClick","event","console","log","set","imgUrl","link","title","text","RenderPaintInSearch","isOpen","setIsOpen","toggle"],"mappings":"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","sourcesContent":["import 'firebase/database';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faHeart } from '@fortawesome/free-solid-svg-icons'\nimport { useEffect, useState } from 'react';\nimport firebase from 'firebase/app';\nimport { Collapse, Button, CardBody, Card } from 'reactstrap';\n\n\nexport function RenderPainting(props) {\n    let paintArray = props.paintArray;\n    let inputtedValue = props.inputtedValue;\n    let paintings = paintArray.map((p) => {\n        if (inputtedValue.toLowerCase().replaceAll(/\\s/g,'') === p.author.toLowerCase()\n            || inputtedValue.toLowerCase().replaceAll(/\\s/g,'') === p.name.toLowerCase()) {\n            return <RenderPaintInSearch painting={p} key={p.name} />\n        }\n        return (<div></div>);\n    });\n    return (\n        <div className=\"row my-4 painting-section\">\n            {paintings}\n        </div>\n    );\n}\n\nexport function RenderPaintingAll(props) {\n    let paintArray = props.paintArray;\n    let paintings = paintArray.map((p) => {\n        return <RenderPaint painting={p} key={p.alt+\"_\"}/>\n    });\n    return (\n        <div className=\"row my-4 painting-section\">\n            {paintings}\n        </div>\n    );\n}\n\nexport function RenderPaint(props) {\n    const [count_likes, setCountLikes] = useState(0);\n\n    useEffect(() => {\n        const curr_count = firebase.database().ref(\"painting_\"+props.painting.number);\n        curr_count.on(\"value\", (snapshot)=>{\n            const theValue = snapshot.val();\n            setCountLikes(theValue);\n        })\n    })\n\n    //an event handling callback\n    const handleClick = (event) => {\n        const curr_count = firebase.database().ref(\"painting_\"+props.painting.number);\n        console.log(curr_count);\n\n        curr_count.set(count_likes+1);\n        setCountLikes(count_likes+1); //update the state to be a new value\n    }\n\n    let imgUrl = \"./img/\"+ props.painting.painting + \".jpg\";\n    return (\n        <div className=\"col-12 col-xl-6\">\n            <div className=\"card card-no-shadow\">\n                <div className=\"card-body\">\n                    <img src={imgUrl} alt={props.painting.alt} className=\"card-img-top\" />\n                    <h3 className=\"card-title\">\n                        <a href={props.painting.link}>{props.painting.title}</a>\n                    </h3>\n                    <p className=\"card-text\">{props.painting.text}</p>\n                    <div className=\"likes\">\n                        <FontAwesomeIcon onClick={handleClick} icon={faHeart} className=\"fa-2x\" color=\"tomato\"></FontAwesomeIcon>\n                        <p className=\"likes-count\">Can't believe people liked me {count_likes} times (๑•̀ㅂ•́)و✧</p>\n                    </div>\n                </div>\n            </div>\n        </div>\n    );\n}\n\nexport function RenderPaintInSearch(props) {\n    const [count_likes, setCountLikes] = useState(0);\n\n    useEffect(() => {\n        const curr_count = firebase.database().ref(\"painting_\"+props.painting.number);\n        curr_count.on(\"value\", (snapshot)=>{\n            const theValue = snapshot.val();\n            console.log(\"valueChange:\" + theValue);\n            setCountLikes(theValue);\n        })\n    })\n\n    //an event handling callback\n    const handleClick = (event) => {\n        const curr_count = firebase.database().ref(\"painting_\"+props.painting.number);\n        console.log(curr_count);\n\n        curr_count.set(count_likes+1);\n        setCountLikes(count_likes+1); //update the state to be a new value\n    }\n\n    const [isOpen, setIsOpen] = useState(false);\n    const toggle = () => setIsOpen(!isOpen);\n\n    let imgUrl = \"./img/\"+ props.painting.painting + \".jpg\";\n    return (\n        <div className=\"col-12 col-xl-6\">\n            <div className=\"card card-no-shadow\">\n                <div className=\"card-body\">\n                    <img src={imgUrl} alt={props.painting.alt} className=\"card-img-top\" />\n                    <h3 className=\"card-title\">\n                        <a href={props.painting.link}>{props.painting.title}</a>\n                    </h3>\n                    <div className=\"detail-button-section\">\n                        <Button className=\"more-detail-button\" color=\"info\" onClick={toggle}>Check for More Detail</Button>\n                        <Collapse isOpen={isOpen}>\n                            <Card>\n                            <CardBody>\n                                <p className=\"card-text\">{props.painting.text}</p>\n                            </CardBody>\n                            </Card>\n                        </Collapse>\n                    </div>\n                    <div className=\"likes\">\n                        <FontAwesomeIcon onClick={handleClick} icon={faHeart} className=\"fa-2x\" color=\"tomato\"></FontAwesomeIcon>\n                        <p className=\"likes-count\">Can't believe people liked me {count_likes} times (๑•̀ㅂ•́)و✧</p>\n                    </div>\n                </div>\n            </div>\n        </div>\n    );\n}"]},"metadata":{},"sourceType":"module"}